from django.core.management.base import BaseCommand
from django.utils import timezone
from django.db import transaction
from datetime import timedelta
from bags.models import Order, OrderItem
from bags.utils import get_cart_statistics
import logging

logger = logging.getLogger(__name__)


class Command(BaseCommand):
    help = '–û—á–∏—â–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ –∫–æ—Ä–∑–∏–Ω—ã (–∑–∞–∫–∞–∑—ã —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "new") —Å—Ç–∞—Ä—à–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–Ω–µ–π'

    def add_arguments(self, parser):
        parser.add_argument(
            '--days',
            type=int,
            default=30,
            help='–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä—ã—Ö –∫–æ—Ä–∑–∏–Ω—ã —Å—á–∏—Ç–∞—é—Ç—Å—è —Å—Ç–∞—Ä—ã–º–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 30)'
        )
        parser.add_argument(
            '--dry-run',
            action='store_true',
            help='–ü–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ, –±–µ–∑ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è'
        )
        parser.add_argument(
            '--force',
            action='store_true',
            help='–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –∫–æ—Ä–∑–∏–Ω—ã –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è'
        )
        parser.add_argument(
            '--notify',
            action='store_true',
            help='–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏'
        )

    def handle(self, *args, **options):
        days = options['days']
        dry_run = options['dry_run']
        force = options['force']
        notify = options['notify']

        # –í—ã—á–∏—Å–ª—è–µ–º –¥–∞—Ç—É –æ—Ç—Å–µ—á–µ–Ω–∏—è
        cutoff_date = timezone.now() - timedelta(days=days)

        # –ù–∞—Ö–æ–¥–∏–º —Å—Ç–∞—Ä—ã–µ –∫–æ—Ä–∑–∏–Ω—ã
        old_carts = Order.objects.filter(
            status='new',
            created_at__lt=cutoff_date
        )

        old_carts_count = old_carts.count()

        if old_carts_count == 0:
            self.stdout.write(
                self.style.SUCCESS(f'–°—Ç–∞—Ä—ã—Ö –∫–æ—Ä–∑–∏–Ω (—Å—Ç–∞—Ä—à–µ {days} –¥–Ω–µ–π) –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')
            )
            return

        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∑–∞–∫–∞–∑–æ–≤
        total_items = OrderItem.objects.filter(
            order__in=old_carts
        ).count()

        self.stdout.write(
            f'–ù–∞–π–¥–µ–Ω–æ {old_carts_count} —Å—Ç–∞—Ä—ã—Ö –∫–æ—Ä–∑–∏–Ω —Å {total_items} —Ç–æ–≤–∞—Ä–∞–º–∏ '
            f'(—Å—Ç–∞—Ä—à–µ {days} –¥–Ω–µ–π, —Å–æ–∑–¥–∞–Ω—ã –¥–æ {cutoff_date.strftime("%d.%m.%Y %H:%M")})'
        )

        if dry_run:
            self.stdout.write(
                self.style.WARNING(
                    '–†–ï–ñ–ò–ú –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–û–ì–û –ü–†–û–°–ú–û–¢–†–ê: '
                    '–ù–∏—á–µ–≥–æ –Ω–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --force –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.'
                )
            )

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ —Å—Ç–∞—Ä—ã—Ö –∫–æ—Ä–∑–∏–Ω
            for cart in old_carts[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
                self.stdout.write(
                    f'  - –ö–æ—Ä–∑–∏–Ω–∞ #{cart.id} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {cart.user.email} '
                    f'(—Å–æ–∑–¥–∞–Ω–∞: {cart.created_at.strftime("%d.%m.%Y %H:%M")})'
                )

            if old_carts_count > 10:
                self.stdout.write(f'  ... –∏ –µ—â–µ {old_carts_count - 10} –∫–æ—Ä–∑–∏–Ω')

            return

        if not force:
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            confirm = input(
                f'\n–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å {old_carts_count} –∫–æ—Ä–∑–∏–Ω '
                f'—Å {total_items} —Ç–æ–≤–∞—Ä–∞–º–∏? (yes/no): '
            )

            if confirm.lower() not in ['yes', 'y', '–¥–∞', '–¥']:
                self.stdout.write(
                    self.style.WARNING('–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.')
                )
                return

        # –í—ã–ø–æ–ª–Ω—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
        try:
            with transaction.atomic():
                # –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∑–∞–∫–∞–∑–æ–≤
                deleted_items = OrderItem.objects.filter(
                    order__in=old_carts
                ).delete()

                # –ó–∞—Ç–µ–º —É–¥–∞–ª—è–µ–º —Å–∞–º–∏ –∑–∞–∫–∞–∑—ã
                deleted_carts = old_carts.delete()

                self.stdout.write(
                    self.style.SUCCESS(
                        f'–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ:\n'
                        f'  - {deleted_carts[0]} –∫–æ—Ä–∑–∏–Ω\n'
                        f'  - {deleted_items[0]} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∑–∞–∫–∞–∑–æ–≤'
                    )
                )

                logger.info(
                    f'–û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω: —É–¥–∞–ª–µ–Ω–æ {deleted_carts[0]} –∫–æ—Ä–∑–∏–Ω '
                    f'—Å {deleted_items[0]} —Ç–æ–≤–∞—Ä–∞–º–∏ (—Å—Ç–∞—Ä—à–µ {days} –¥–Ω–µ–π)'
                )

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–æ
                if notify:
                    self.stdout.write('\nüìß –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –æ—á–∏—Å—Ç–∫–∏...')

                    # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                    stats = get_cart_statistics()

                    # –°–æ–∑–¥–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –æ—á–∏—Å—Ç–∫–∏
                    subject = f"‚úÖ –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–∞ - —É–¥–∞–ª–µ–Ω–æ {deleted_carts[0]} –∫–æ—Ä–∑–∏–Ω"

                    message = f"""
–û–ß–ò–°–¢–ö–ê –ö–û–†–ó–ò–ù –ó–ê–í–ï–†–®–ï–ù–ê!

–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—á–∏—Å—Ç–∫–∏:
- –£–¥–∞–ª–µ–Ω–æ –∫–æ—Ä–∑–∏–Ω: {deleted_carts[0]}
- –£–¥–∞–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {deleted_items[0]}
- –í–æ–∑—Ä–∞—Å—Ç –∫–æ—Ä–∑–∏–Ω: —Å—Ç–∞—Ä—à–µ {days} –¥–Ω–µ–π

–¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:
- –í—Å–µ–≥–æ –∫–æ—Ä–∑–∏–Ω: {stats['total_carts']}
- –¢–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–∞—Ö: {stats['total_cart_items']}
- –°—Ç–∞—Ä—ã—Ö –∫–æ—Ä–∑–∏–Ω (>7 –¥–Ω–µ–π): {stats['old_carts_7_days']}
- –°—Ç–∞—Ä—ã—Ö –∫–æ—Ä–∑–∏–Ω (>30 –¥–Ω–µ–π): {stats['old_carts_30_days']}

–û—á–∏—Å—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: {timezone.now().strftime('%d.%m.%Y %H:%M')}
"""

                    html_message = f"""
<html>
  <body style='font-family:Arial,sans-serif;background:#f8f9fa;padding:0;margin:0;'>
    <div style='max-width:600px;margin:30px auto;background:#fff;border-radius:12px;box-shadow:0 4px 24px rgba(0,0,0,0.07);overflow:hidden;'>
      <div style='background:linear-gradient(90deg,#4caf50,#66bb6a);color:#fff;padding:24px 32px 16px 32px;'>
        <h2 style='margin:0 0 8px 0;font-weight:700;'>‚úÖ –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω –∑–∞–≤–µ—Ä—à–µ–Ω–∞</h2>
        <div style='font-size:1.1rem;'>–£–¥–∞–ª–µ–Ω–æ {deleted_carts[0]} –∫–æ—Ä–∑–∏–Ω</div>
      </div>
      <div style='padding:24px 32px;'>
        <h3 style='margin-top:0;color:#4caf50;'>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—á–∏—Å—Ç–∫–∏</h3>
        <div style='background:#f8f9fa;padding:16px;border-radius:8px;margin-bottom:16px;'>
          <p style='margin:0 0 8px 0;'><b>–£–¥–∞–ª–µ–Ω–æ –∫–æ—Ä–∑–∏–Ω:</b> {deleted_carts[0]}</p>
          <p style='margin:0 0 8px 0;'><b>–£–¥–∞–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤:</b> {deleted_items[0]}</p>
          <p style='margin:0;'><b>–í–æ–∑—Ä–∞—Å—Ç –∫–æ—Ä–∑–∏–Ω:</b> —Å—Ç–∞—Ä—à–µ {days} –¥–Ω–µ–π</p>
        </div>

        <h3 style='color:#4caf50;'>üìà –¢–µ–∫—É—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
        <div style='background:#e8f5e8;border:1px solid #c8e6c9;border-radius:8px;padding:16px;margin-bottom:16px;'>
          <p style='margin:0 0 8px 0;'><b>–í—Å–µ–≥–æ –∫–æ—Ä–∑–∏–Ω:</b> {stats['total_carts']}</p>
          <p style='margin:0 0 8px 0;'><b>–¢–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–∞—Ö:</b> {stats['total_cart_items']}</p>
          <p style='margin:0 0 8px 0;'><b>–°—Ç–∞—Ä—ã—Ö –∫–æ—Ä–∑–∏–Ω (>7 –¥–Ω–µ–π):</b> {stats['old_carts_7_days']}</p>
          <p style='margin:0;'><b>–°—Ç–∞—Ä—ã—Ö –∫–æ—Ä–∑–∏–Ω (>30 –¥–Ω–µ–π):</b> {stats['old_carts_30_days']}</p>
        </div>

        <div style='background:#e3f2fd;border:1px solid #bbdefb;border-radius:8px;padding:16px;margin-top:16px;'>
          <p style='margin:0;color:#1976d2;font-size:0.9rem;'><i>üí° –û—á–∏—Å—Ç–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: {timezone.now().strftime('%d.%m.%Y %H:%M')}</i></p>
        </div>

        <div style='margin-top:24px;padding-top:16px;border-top:1px solid #e9ecef;text-align:center;color:#6c757d;font-size:0.9rem;'>
          <p style='margin:0;'>–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç —Å–∏—Å—Ç–µ–º—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω–∞–º–∏</p>
        </div>
      </div>
    </div>
  </body>
</html>
"""

                    try:
                        from django.core.mail import send_mail
                        from django.conf import settings

                        send_mail(
                            subject=subject,
                            message=message,
                            from_email=settings.DEFAULT_FROM_EMAIL,
                            recipient_list=[settings.DEFAULT_FROM_EMAIL],
                            fail_silently=False,
                            html_message=html_message,
                        )

                        self.stdout.write(
                            self.style.SUCCESS(
                                '‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –æ—á–∏—Å—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ'
                            )
                        )

                    except Exception as e:
                        self.stdout.write(
                            self.style.ERROR(
                                f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}'
                            )
                        )

        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {e}')
            )
            logger.error(f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫–æ—Ä–∑–∏–Ω: {e}')
            return

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
        remaining_carts = Order.objects.filter(status='new').count()
        remaining_items = OrderItem.objects.filter(
            order__status='new'
        ).count()

        self.stdout.write(
            '\n–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:\n'
            f'  - –û—Å—Ç–∞–ª–æ—Å—å –∫–æ—Ä–∑–∏–Ω: {remaining_carts}\n'
            f'  - –û—Å—Ç–∞–ª–æ—Å—å —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–∞—Ö: {remaining_items}'
        )
